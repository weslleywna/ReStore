name: Flyway Migration

on: 
  push:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment Name'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev

jobs:
  container-job:
    runs-on: ubuntu-latest
  
    steps:
      - name: Starting Postgres
        run: echo STARTING POSTGRES

      - name: Start PostgreSQL Container
        run: |
          docker run --name postgres \
            -e POSTGRES_USER=${{ secrets.DB_USER }} \
            -e POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e POSTGRES_DB=${{ secrets.DB_NAME }} \
            -p 5432:5432 \
            --health-cmd="pg_isready" \
            --health-interval="10s" \
            --health-timeout="5s" \
            --health-retries=5 \
            -d postgres

      - name: Running Flyway Migration
        run: echo RUNNING FLYWAY MIGRATION

      - uses: actions/checkout@v4

      - name: Setup Flyway
        env: 
          FLYWAY_VERSION: 9.16.3
        run: |
          wget -qO- https://download.red-gate.com/maven/release/org/flywaydb/enterprise/flyway-commandline/${{ env.FLYWAY_VERSION }}/flyway-commandline-${{ env.FLYWAY_VERSION }}-linux-x64.tar.gz | tar -xvz && sudo ln -s `pwd`/flyway-${{ env.FLYWAY_VERSION }}/flyway /usr/local/bin 
  
      - name: Run Flyway Migrations
        env:
          FLYWAY_URL: jdbc:postgresql://localhost:5432/${{ secrets.DB_NAME }}
          FLYWAY_USER: ${{ secrets.DB_USER }}
          FLYWAY_PASSWORD: ${{ secrets.DB_PASSWORD }}
          FLYWAY_SCHEMAS: flyway,public
          FLYWAY_LOCATIONS: filesystem:./sql
        run: |
          flyway migrate

      - name: Stopping Postgres
        run: docker stop postgres && docker rm postgres
